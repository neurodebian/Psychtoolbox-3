From: Yaroslav Halchenko <debian@onerussian.com>
Subject: Minimal changes to adjust for API changes in libfreenect

 Changes deduced through inspecting git history of freenect, in particular
 following commits:

  99306000709b52b45066587d59b9e35605789f8e
  b0e7440690bd46cba5edf0472d06ef093fb352e1


diff --git a/PsychSourceGL/Source/Common/PsychKinect/PsychKinect.c b/PsychSourceGL/Source/Common/PsychKinect/PsychKinect.c
index 79724bb..861a5be 100644
--- a/PsychSourceGL/Source/Common/PsychKinect/PsychKinect.c
+++ b/PsychSourceGL/Source/Common/PsychKinect/PsychKinect.c
@@ -36,18 +36,18 @@
 #define FREENECT_FRAME_W 640
 #define FREENECT_FRAME_H 480
 #define FREENECT_FRAME_PIX (FREENECT_FRAME_H*FREENECT_FRAME_W)
-#define FREENECT_RGB_SIZE (FREENECT_FRAME_PIX*3)
-#define FREENECT_BAYER_SIZE (FREENECT_FRAME_PIX)
+#define FREENECT_VIDEO_RGB_SIZE (FREENECT_FRAME_PIX*3)
+#define FREENECT_VIDEO_BAYER_SIZE (FREENECT_FRAME_PIX)
 #define FREENECT_DEPTH_SIZE (FREENECT_FRAME_PIX*sizeof(freenect_depth))
 #define FREENECT_COUNTS_PER_G 819
 
 typedef enum {
-	FREENECT_FORMAT_RGB = 0,
-	FREENECT_FORMAT_BAYER = 1,
+	FREENECT_VIDEO_RGB = 0,
+	FREENECT_VIDEO_BAYER = 1,
 } freenect_rgb_format;
 
 typedef enum {
-	FREENECT_FORMAT_11_BIT = 0,
+	FREENECT_DEPTH_11BIT = 0,
 	FREENECT_FORMAT_10_BIT = 1,
 	FREENECT_FORMAT_PACKED_11_BIT = 2,
 	FREENECT_FORMAT_PACKED_10_BIT = 3,
@@ -245,7 +245,7 @@ PsychKNBuffer* PsychGetKNBuffer(PsychKNDevice* kinect, int index)
 	return(&kinect->buffers[index % kinect->numbuffers]);
 }
 
-void PsychDepthCB(freenect_device *dev, freenect_depth *depth, uint32_t timestamp)
+void PsychDepthCB(freenect_device *dev, void *depth, uint32_t timestamp)
 {
 	PsychKNDevice *kinect = (PsychKNDevice*) freenect_get_user(dev);
 	PsychKNBuffer *buffer = PsychGetKNBuffer(kinect, kinect->recposition);
@@ -260,12 +260,12 @@ void PsychDepthCB(freenect_device *dev, freenect_depth *depth, uint32_t timestam
 	kinect->paCalls |= 0x1;
 }
 
-void PsychRGBCB(freenect_device *dev, freenect_pixel *rgb, uint32_t timestamp)
+void PsychRGBCB(freenect_device *dev, void *rgb, uint32_t timestamp)
 {
 	PsychKNDevice *kinect = (PsychKNDevice*) freenect_get_user(dev);
 	PsychKNBuffer *buffer = PsychGetKNBuffer(kinect, kinect->recposition);
 	if (kinect->paCalls & 0x2) return;
-	memcpy(buffer->color, rgb, ((kinect->bayerFilterMode == 1) ? FREENECT_RGB_SIZE : FREENECT_BAYER_SIZE));
+	memcpy(buffer->color, rgb, ((kinect->bayerFilterMode == 1) ? FREENECT_VIDEO_RGB_SIZE : FREENECT_VIDEO_BAYER_SIZE));
 	buffer->cwidth = FREENECT_FRAME_W;
 	buffer->cheight = FREENECT_FRAME_H;
 	
@@ -289,8 +289,8 @@ void* PsychKinectThreadMain(volatile void* deviceToCast)
 	// Initialize libkinect and attach callbacks, start kinect's iso-streaming:
 	freenect_set_depth_callback(kinect->dev, PsychDepthCB);
 	freenect_set_rgb_callback(kinect->dev, PsychRGBCB);
-	freenect_set_rgb_format(kinect->dev, ((kinect->bayerFilterMode == 1) ? FREENECT_FORMAT_RGB : FREENECT_FORMAT_BAYER));
-	freenect_set_depth_format(kinect->dev, FREENECT_FORMAT_11_BIT);
+	freenect_set_rgb_format(kinect->dev, ((kinect->bayerFilterMode == 1) ? FREENECT_VIDEO_RGB : FREENECT_VIDEO_BAYER));
+	freenect_set_depth_format(kinect->dev, FREENECT_DEPTH_11BIT);
 	
 	freenect_start_depth(kinect->dev);
 	freenect_start_rgb(kinect->dev);
@@ -586,7 +586,7 @@ PsychError PSYCHKINECTOpen(void)
 	}
 	
 	for (i = 0; i < numbuffers; i++) {
-		kinectdevices[handle].buffers[i].color = (unsigned char*) calloc(1, ((bayerFilterMode == 1) ? FREENECT_RGB_SIZE : FREENECT_BAYER_SIZE));
+		kinectdevices[handle].buffers[i].color = (unsigned char*) calloc(1, ((bayerFilterMode == 1) ? FREENECT_VIDEO_RGB_SIZE : FREENECT_VIDEO_BAYER_SIZE));
 		if (NULL == kinectdevices[handle].buffers[i].color) {
 			for (j = 0; j < i; j++) free(kinectdevices[handle].buffers[j].color);
 			free(kinectdevices[handle].buffers);
